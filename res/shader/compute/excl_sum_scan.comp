#version 460 core
#extension GL_EXT_shader_explicit_arithmetic_types_int32 : require
#extension GL_KHR_shader_subgroup_arithmetic : require

layout(local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0) restrict readonly buffer WorkgroupBuffer {
    uint32_t workgroup_buf[];
};

layout(binding = 1) restrict readonly buffer InputBuffer {
    uint32_t input_buf[];
};

layout(binding = 2) restrict writeonly buffer OutputBuffer {
    uint32_t output_buf[];
};

void main() {
    uint32_t subgroup_sum = subgroupExclusiveAdd(input_buf[gl_GlobalInvocationID.x]);
    uint32_t workgroup_sum = 0;

    uint workgroups_per_subgroup_invocation = (gl_NumWorkGroups.x + gl_SubgroupSize - 1) / gl_SubgroupSize;
    uint start = gl_SubgroupInvocationID * workgroups_per_subgroup_invocation;
    uint end = min(start + workgroups_per_subgroup_invocation, gl_WorkGroupID.x);
    for (uint workgroup_id = start; workgroup_id < end; workgroup_id++) {
        workgroup_sum += workgroup_buf[workgroup_id];
    }

    workgroup_sum = subgroupAdd(workgroup_sum);

    output_buf[gl_GlobalInvocationID.x] = subgroup_sum + workgroup_sum;
}
