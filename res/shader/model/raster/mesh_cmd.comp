#version 460 core
#extension GL_EXT_shader_explicit_arithmetic_types_int8 : require
#extension GL_EXT_shader_explicit_arithmetic_types_int32 : require

#include "../mesh.glsl"
#include "draw_cmd.glsl"

layout(local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

layout(push_constant) uniform PushConstants {
    layout(offset = 0) uint32_t mesh_count;
} push_const;

layout(binding = 0) restrict writeonly buffer DrawCommandBuffer {
    DrawCommand[] draw_cmd_buf;
};

layout(binding = 1) restrict readonly buffer MeshBuffer {
    Mesh[] mesh_buf;
};

layout(binding = 2) restrict readonly buffer MeshInstanceOffsetBuffer {
    uint32_t[] mesh_instance_offset_buf;
};

void main() {
    if (gl_GlobalInvocationID.x >= push_const.mesh_count) {
        return;
    }

    Mesh mesh = mesh_buf[gl_GlobalInvocationID.x];
    uint32_t mesh_instance_offset = mesh_instance_offset_buf[gl_GlobalInvocationID.x];

    draw_cmd_buf[gl_GlobalInvocationID.x] = DrawCommand(mesh.index_count, 0, 0,
        mesh_instance_offset);
}
